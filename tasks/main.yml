# code: language=ansible
---
- name: Ensure login is defined
  ansible.builtin.assert:
    that:
      - user_login is defined
      - user_login | length > 0
      - user_login != None
    fail_msg: "user_login needs to be set in order for this role to work"

- name: Ensure password_hash is defined
  ansible.builtin.assert:
    that:
      - user_password_hash is defined
      - user_password_hash | length > 0
      - user_password_hash != None
    fail_msg: "user_password_hash needs to be set in order for this role to work"

- name: Ensure public_key_file is defined
  ansible.builtin.assert:
    that:
      - user_public_key_file is defined
      - user_public_key_file | length > 0
      - user_public_key_file != None
    fail_msg: "user_public_key_file needs to be set in order for this role to work"

- name: Add user
  ansible.builtin.user:
    name: "{{ user_login }}"
    comment: "{{ user_comment }}"
    password: "{{ user_password_hash }}"
    update_password: on_create
    shell: "{{ user_shell }}"

- name: Add authorized_key
  ansible.posix.authorized_key:
    key: "{{ lookup('file', user_public_key_file) }}"
    user: "{{ user_login }}"
    state: present

- name: Grant sudo superuser rights
  community.general.sudoers:
    name: "{{ user_login }}-superuser"
    user: "{{ user_login }}"
    state: present
    commands: ALL
    nopassword: false
  when: user_allow_sudo_superuser | bool and ansible_facts['distribution'] != 'Alpine'

- name: Ensure doas is present on alpine
  ansible.builtin.package:
    name: doas
    state: present
  when: user_allow_sudo_superuser | bool and ansible_facts['distribution'] == 'Alpine'

- name: Permit wheel group to use doas
  ansible.builtin.copy:
    content: permit persist :wheel
    dest: /etc/doas.d/doas.conf
    group: root
    owner: root
    mode: u=rw,g=r,o=r
  when: user_allow_sudo_superuser | bool and ansible_facts['distribution'] == 'Alpine'

- name: Add user to wheel group
  ansible.builtin.user:
    name: "{{ user_login }}"
    groups:
      - wheel
    append: true
  when: user_allow_sudo_superuser | bool and ansible_facts['distribution'] == 'Alpine'
